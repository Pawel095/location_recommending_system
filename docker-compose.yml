version: '3.8'

services:
  datanode:
    restart: unless-stopped
    build:
      context: ./datanode
    image: 192.168.2.1:5000/datanode
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop
    volumes:
      - datanode:/hadoop/dfs/data
    deploy:
      placement:
        constraints:
          - "node.labels.type==executor"

  namenode:
    restart: unless-stopped
    build:
      context: ./namenode
    image: 192.168.2.1:5000/namenode
    ports:
      - 9870:9870
      - 9000:9000
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    networks:
      - hadoop
    volumes:
      - namenode:/hadoop/dfs/name
    deploy:
      placement:
        constraints:
          - "node.labels.type==manager"

  resourcemanager:
    restart: unless-stopped
    build:
      context: ./resourcemanager
    image: 192.168.2.1:5000/resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop
    deploy:
      placement:
        constraints:
          - "node.labels.type==executor"

  nodemanager:
    restart: unless-stopped
    build:
      context: ./nodemanager
    image: 192.168.2.1:5000/nodemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop
    deploy:
      placement:
        constraints:
          - "node.labels.type==executor"

  historyserver:
    restart: unless-stopped
    build:
      context: ./historyserver
    image: 192.168.2.1:5000/historyserver
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    ports:
      - 8188:8188
    volumes:
      - historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    networks:
      - hadoop
    deploy:
      placement:
        constraints:
          - "node.labels.type==manager"

  executor:
    build:
      context: ./executor
    image: 192.168.2.1:5000/executor
    volumes:
      - ./executor/package:/app
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - DISPLAY=:0
      - QT_X11_NO_MITSHM=1
      - SERVICE_PRECONDITION=namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088 historyserver:8188
    env_file:
      - hadoop.env
    networks:
      - hadoop
      - portainer-net
      - swarmpit-net
    deploy:
      mode: global

  portainer-agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer-net
    deploy:
      mode: global

  portainer-gui:
    image: portainer/portainer
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    volumes:
      - portainer-data:/data
    networks:
      - portainer-net
    ports:
      - 9000:9000
    deploy:
      placement:
        constraints:
          - node.labels.gui_host == yes

  swarmpit-gui:
    image: swarmpit/swarmpit:latest
    environment:
      - SWARMPIT_DB=http://swarmpit-couchdb:5984
      - SWARMPIT_INFLUXDB=http://swarmpit-influxdb:8086
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - swarmpit-net
    ports:
      - 8080:9001
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
      placement:
        constraints:
          - node.labels.gui_host == yes

  swarmpit-couchdb:
    image: couchdb:2.3.0
    volumes:
      - db-data:/opt/couchdb/data
    networks:
      - swarmpit-net
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M
      placement:
        constraints:
          - node.labels.swarmpit_data_host == yes

  swarmpit-influxdb:
    image: influxdb:1.7
    volumes:
      - influx-data:/var/lib/influxdb
    networks:
      - swarmpit-net
    deploy:
      resources:
        reservations:
          cpus: '0.3'
          memory: 128M
        limits:
          cpus: '0.6'
          memory: 512M
      placement:
        constraints:
          - node.labels.swarmpit_data_host == yes

  swarmpit-agent:
    image: swarmpit/agent:latest
    environment:
      - DOCKER_API_VERSION=1.35
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - swarmpit-net
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M

networks:
  hadoop:
    attachable: true
  portainer-net:
    attachable: true
  swarmpit-net:
    attachable: true

volumes:
  namenode:
  datanode:
  historyserver:
  portainer-data:
  db-data:
  influx-data:
